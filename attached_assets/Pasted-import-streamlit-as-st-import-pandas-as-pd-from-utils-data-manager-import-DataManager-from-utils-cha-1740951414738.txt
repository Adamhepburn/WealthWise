import streamlit as st
import pandas as pd
from utils.data_manager import DataManager
from utils.charts import (
    create_expense_pie_chart,
    create_portfolio_pie_chart,
    create_goals_progress_chart,
    create_expense_trend_chart
)
import streamlit.components.v1 as components

# Page configuration
st.set_page_config(
    page_title="Personal Finance Dashboard",
    page_icon="ðŸ’°",
    layout="wide"
)

# Load custom CSS
with open('styles/custom.css') as f:
    st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# Initialize data manager
@st.cache_resource
def get_data_manager():
    return DataManager()

data_manager = get_data_manager()

# Sidebar navigation
st.sidebar.title("Navigation")
page = st.sidebar.radio("Go to", ["Overview", "Bank Accounts", "Expenses", "Investments", "Goals"], key="nav")

# Bank Accounts Page
if page == "Bank Accounts":
    st.title("Connected Bank Accounts")

    # Link new account section
    if st.button("+ Link New Account", key="link_account"):
        try:
            # Get link token
            link_token = data_manager.create_link_token()
            st.session_state['link_token'] = link_token  # Store in session state
            st.write("Debug: Link token created:", link_token[:10] + "...")
        except Exception as e:
            st.error("Failed to initialize Plaid")
            st.write("Error details:", str(e))

    # Display Plaid Link if token exists
    if 'link_token' in st.session_state:
        plaid_html = f"""
        <div>
            <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
            <div id="plaid-status">Initializing Plaid...</div>
            <script type="text/javascript">
                console.log('Script running...');
                const handler = Plaid.create({{
                    token: '{st.session_state['link_token']}',
                    onSuccess: function(public_token, metadata) {{
                        document.getElementById('plaid-status').innerHTML = 'Success! Public Token: ' + public_token;
                        console.log('Success:', public_token, metadata);
                    }},
                    onLoad: function() {{
                        document.getElementById('plaid-status').innerHTML = 'Plaid Loaded - Opening...';
                        console.log('Plaid loaded');
                        handler.open();
                    }},
                    onExit: function(err, metadata) {{
                        if (err != null) {{
                            document.getElementById('plaid-status').innerHTML = 'Error: ' + (err.display_message || JSON.stringify(err));
                            console.error('Plaid error:', err);
                        }} else {{
                            document.getElementById('plaid-status').innerHTML = 'Exited';
                        }}
                    }},
                    onEvent: function(eventName, metadata) {{
                        console.log('Event:', eventName, metadata);
                    }}
                }});
            </script>
        </div>
        """
        components.html(plaid_html, height=600)  # Increased height for visibility
        st.write("Plaid component loaded - check the popup or browser console for details.")

    # Display linked accounts
    accounts = data_manager.get_linked_accounts()
    if not accounts.empty:
        st.subheader("Connected Accounts")
        st.dataframe(accounts, use_container_width=True)

        if st.button("Sync Transactions", key="sync"):
            with st.spinner("Syncing transactions..."):
                data_manager.sync_transactions()
            st.success("Transactions synced successfully!")
    else:
        st.info("No bank accounts connected yet. Click 'Link New Account' to get started!")